// Code generated by goctl. DO NOT EDIT.
// Source: relation.proto

package server

import (
	"context"

	"min-tiktok/services/relation/internal/logic"
	"min-tiktok/services/relation/internal/svc"
	"min-tiktok/services/relation/relation"
)

type RelationServer struct {
	svcCtx *svc.ServiceContext
	relation.UnimplementedRelationServer
}

func NewRelationServer(svcCtx *svc.ServiceContext) *RelationServer {
	return &RelationServer{
		svcCtx: svcCtx,
	}
}

func (s *RelationServer) Follow(ctx context.Context, in *relation.RelationActionRequest) (*relation.RelationActionResponse, error) {
	l := logic.NewFollowLogic(ctx, s.svcCtx)
	return l.Follow(in)
}

func (s *RelationServer) Unfollow(ctx context.Context, in *relation.RelationActionRequest) (*relation.RelationActionResponse, error) {
	l := logic.NewUnfollowLogic(ctx, s.svcCtx)
	return l.Unfollow(in)
}

func (s *RelationServer) GetFollowList(ctx context.Context, in *relation.FollowListRequest) (*relation.FollowListResponse, error) {
	l := logic.NewGetFollowListLogic(ctx, s.svcCtx)
	return l.GetFollowList(in)
}

func (s *RelationServer) GetFollowerList(ctx context.Context, in *relation.FollowerListRequest) (*relation.FollowerListResponse, error) {
	l := logic.NewGetFollowerListLogic(ctx, s.svcCtx)
	return l.GetFollowerList(in)
}

func (s *RelationServer) GetFriendList(ctx context.Context, in *relation.FriendListRequest) (*relation.FriendListResponse, error) {
	l := logic.NewGetFriendListLogic(ctx, s.svcCtx)
	return l.GetFriendList(in)
}
