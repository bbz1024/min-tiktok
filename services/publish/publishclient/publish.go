// Code generated by goctl. DO NOT EDIT.
// Source: publish.proto

package publishclient

import (
	"context"

	"min-tiktok/services/publish/publish"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ActionVideoReq  = publish.ActionVideoReq
	ActionVideoResp = publish.ActionVideoResp
	ListVideoReq    = publish.ListVideoReq
	ListVideoResp   = publish.ListVideoResp
	UserInfo        = publish.UserInfo
	Video           = publish.Video

	Publish interface {
		ActionVideo(ctx context.Context, in *ActionVideoReq, opts ...grpc.CallOption) (*ActionVideoResp, error)
		ListVideo(ctx context.Context, in *ListVideoReq, opts ...grpc.CallOption) (*ListVideoResp, error)
	}

	defaultPublish struct {
		cli zrpc.Client
	}
)

func NewPublish(cli zrpc.Client) Publish {
	return &defaultPublish{
		cli: cli,
	}
}

func (m *defaultPublish) ActionVideo(ctx context.Context, in *ActionVideoReq, opts ...grpc.CallOption) (*ActionVideoResp, error) {
	client := publish.NewPublishClient(m.cli.Conn())
	return client.ActionVideo(ctx, in, opts...)
}

func (m *defaultPublish) ListVideo(ctx context.Context, in *ListVideoReq, opts ...grpc.CallOption) (*ListVideoResp, error) {
	client := publish.NewPublishClient(m.cli.Conn())
	return client.ListVideo(ctx, in, opts...)
}
