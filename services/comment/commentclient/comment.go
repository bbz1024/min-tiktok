// Code generated by goctl. DO NOT EDIT.
// Source: comment.proto

package commentclient

import (
	"context"

	"min-tiktok/services/comment/comment"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ActionCommentRequest  = comment.ActionCommentRequest
	ActionCommentResponse = comment.ActionCommentResponse
	Comments              = comment.Comments
	ListCommentRequest    = comment.ListCommentRequest
	ListCommentResponse   = comment.ListCommentResponse
	UserInfo              = comment.UserInfo

	Comment interface {
		ActionComment(ctx context.Context, in *ActionCommentRequest, opts ...grpc.CallOption) (*ActionCommentResponse, error)
		ListComment(ctx context.Context, in *ListCommentRequest, opts ...grpc.CallOption) (*ListCommentResponse, error)
	}

	defaultComment struct {
		cli zrpc.Client
	}
)

func NewComment(cli zrpc.Client) Comment {
	return &defaultComment{
		cli: cli,
	}
}

func (m *defaultComment) ActionComment(ctx context.Context, in *ActionCommentRequest, opts ...grpc.CallOption) (*ActionCommentResponse, error) {
	client := comment.NewCommentClient(m.cli.Conn())
	return client.ActionComment(ctx, in, opts...)
}

func (m *defaultComment) ListComment(ctx context.Context, in *ListCommentRequest, opts ...grpc.CallOption) (*ListCommentResponse, error) {
	client := comment.NewCommentClient(m.cli.Conn())
	return client.ListComment(ctx, in, opts...)
}
