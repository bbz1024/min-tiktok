// Code generated by goctl. DO NOT EDIT.
// Source: feedback.proto

package feedbackclient

import (
	"context"

	"min-tiktok/services/feedback/feedback"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FeedbackRequest       = feedback.FeedbackRequest
	FeedbackResponse      = feedback.FeedbackResponse
	ListRecommendRequest  = feedback.ListRecommendRequest
	ListRecommendResponse = feedback.ListRecommendResponse

	Feedback interface {
		Feedback(ctx context.Context, in *FeedbackRequest, opts ...grpc.CallOption) (*FeedbackResponse, error)
		ListRecommendWithFeedback(ctx context.Context, in *ListRecommendRequest, opts ...grpc.CallOption) (*ListRecommendResponse, error)
	}

	defaultFeedback struct {
		cli zrpc.Client
	}
)

func NewFeedback(cli zrpc.Client) Feedback {
	return &defaultFeedback{
		cli: cli,
	}
}

func (m *defaultFeedback) Feedback(ctx context.Context, in *FeedbackRequest, opts ...grpc.CallOption) (*FeedbackResponse, error) {
	client := feedback.NewFeedbackClient(m.cli.Conn())
	return client.Feedback(ctx, in, opts...)
}

func (m *defaultFeedback) ListRecommendWithFeedback(ctx context.Context, in *ListRecommendRequest, opts ...grpc.CallOption) (*ListRecommendResponse, error) {
	client := feedback.NewFeedbackClient(m.cli.Conn())
	return client.ListRecommendWithFeedback(ctx, in, opts...)
}
