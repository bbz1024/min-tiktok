// Code generated by goctl. DO NOT EDIT.
// Source: message.proto

package messageclient

import (
	"context"

	"min-tiktok/services/message/message"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	MessageActionRequest  = message.MessageActionRequest
	MessageActionResponse = message.MessageActionResponse
	MessageInfo           = message.MessageInfo
	MessageListRequest    = message.MessageListRequest
	MessageListResponse   = message.MessageListResponse

	Message interface {
		MessageList(ctx context.Context, in *MessageListRequest, opts ...grpc.CallOption) (*MessageListResponse, error)
		MessageAction(ctx context.Context, in *MessageActionRequest, opts ...grpc.CallOption) (*MessageActionResponse, error)
	}

	defaultMessage struct {
		cli zrpc.Client
	}
)

func NewMessage(cli zrpc.Client) Message {
	return &defaultMessage{
		cli: cli,
	}
}

func (m *defaultMessage) MessageList(ctx context.Context, in *MessageListRequest, opts ...grpc.CallOption) (*MessageListResponse, error) {
	client := message.NewMessageClient(m.cli.Conn())
	return client.MessageList(ctx, in, opts...)
}

func (m *defaultMessage) MessageAction(ctx context.Context, in *MessageActionRequest, opts ...grpc.CallOption) (*MessageActionResponse, error) {
	client := message.NewMessageClient(m.cli.Conn())
	return client.MessageAction(ctx, in, opts...)
}
