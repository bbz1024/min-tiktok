syntax = "v1"

type PublishActionReq {
    ActorId uint32 `form:"actor_id"`
    Data []byte `form:"data,optional"`
    Title string `form:"title"`
}

type PublishActionResp {
    StatusCode int32 `json:"status_code"`
    StatusMsg string `json:"status_msg"`
}

type PublishListReq {
    UserId uint32 `form:"user_id"`
    ActorId uint32 `form:"actor_id,optional"`
}

type User {
    ID uint32 `json:"id"`                            // 用户id
    Name string `json:"name"`                        // 用户名称
    FollowCount uint32 `json:"follow_count"`         // 关注总数
    FollowerCount uint32 `json:"follower_count"`     // 粉丝总数
    IsFollow bool `json:"is_follow"`                 // true-已关注，false-未关注
    Avatar string `json:"avatar"`                    // 用户头像
    BackgroundImage string `json:"background_image"` // 用户个人页顶部大图
    Signature string `json:"signature"`              // 个人简介
    TotalFavorited uint32 `json:"total_favorited"`   // 获赞数量
    WorkCount uint32 `json:"work_count"`             // 作品数量
    FavoriteCount uint32 `json:"favorite_count"`     // 点赞数量
}

type Video {
    Id uint32 `json:"id"`
    Author *User `json:"author"`
    PlayUrl string `json:"play_url"`
    CoverUrl string `json:"cover_url"`
    FavoriteCount uint32 `json:"favorite_count"`
    CommentCount uint32 `json:"comment_count"`
    IsFavorite bool `json:"is_favorite"`
    Title string `json:"title"`
}

type PublishListResp {
    StatusCode int32 `json:"status_code"`
    StatusMsg string `json:"status_msg"`
    VideoList []Video `json:"video_list"`
}

@server(
    prefix: /douyin/publish
    // 通过 middileware 关键字声明中间件，多个中间件以英文逗号分割，如 UserAgentMiddleware,LogMiddleware
    middleware: AuthMiddleware
)
service publish-api {
    @handler PublishVideosHandler
    post /action (PublishActionReq) returns (PublishActionResp)

    @handler PublishListHandler
    get /list (PublishListReq) returns (PublishListResp)
}

