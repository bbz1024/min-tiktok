syntax = "v1"

type GetUserInfoRequest {
	UserID  uint32 `json:"user_id" form:"user_id"` // 用户id
	ActorID uint32 `json:"actor_id" form:"actor_id,optional"` // 操作者id
}

type GetUserInfoResponse {
	StatusCode uint32  `json:"status_code"` // 状态码，0-成功，其他值-失败
	StatusMsg  string `json:"status_msg"` // 返回状态描述
	User       User   `json:"user"` // 用户信息
}

type User {
	ID              uint32  `json:"id"` // 用户id
	Name            string `json:"name"` // 用户名称
	FollowCount     uint32  `json:"follow_count"` // 关注总数
	FollowerCount   uint32  `json:"follower_count"` // 粉丝总数
	IsFollow        bool   `json:"is_follow"` // true-已关注，false-未关注
	Avatar          string `json:"avatar"` // 用户头像
	BackgroundImage string `json:"background_image"` // 用户个人页顶部大图
	Signature       string `json:"signature"` // 个人简介
	TotalFavorited  uint32  `json:"total_favorited"` // 获赞数量
	WorkCount       uint32  `json:"work_count"` // 作品数量
	FavoriteCount   uint32  `json:"favorite_count"` // 点赞数量
}

@server (
	prefix: /douyin/user
	// 通过 middileware 关键字声明中间件，多个中间件以英文逗号分割，如 UserAgentMiddleware,LogMiddleware
	middleware: AuthMiddleware
)
service user-api {
	@handler GetUserInfoHandler
	get / (GetUserInfoRequest) returns (GetUserInfoResponse)
}
